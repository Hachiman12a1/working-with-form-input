[{"I:\\Download\\FPT Udemy\\working-with-Form-Input\\src\\index.js":"1","I:\\Download\\FPT Udemy\\working-with-Form-Input\\src\\App.js":"2","I:\\Download\\FPT Udemy\\working-with-Form-Input\\src\\components\\SimpleInput.js":"3","I:\\Download\\FPT Udemy\\working-with-Form-Input\\src\\hooks\\useInput.js":"4","I:\\Download\\FPT Udemy\\working-with-Form-Input\\src\\components\\BasicForm.js":"5"},{"size":179,"mtime":1648226901000,"results":"6","hashOfConfig":"7"},{"size":235,"mtime":1660830853125,"results":"8","hashOfConfig":"7"},{"size":2249,"mtime":1660830538571,"results":"9","hashOfConfig":"7"},{"size":1250,"mtime":1660833238273,"results":"10","hashOfConfig":"7"},{"size":2945,"mtime":1660832094147,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1khd7bm",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"I:\\Download\\FPT Udemy\\working-with-Form-Input\\src\\index.js",[],"I:\\Download\\FPT Udemy\\working-with-Form-Input\\src\\App.js",[],"I:\\Download\\FPT Udemy\\working-with-Form-Input\\src\\components\\SimpleInput.js",["24","25"],"import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/useInput\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameInputChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes('@'));\n\n\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    // nameInputRef.current.value = '' => NOT IDEAL, DON'T MANIPULATE THE DOM\n    resetNameInput();\n    resetEmailInput();\n  };\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name not must be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Please enter a valid email.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["26","27"],"I:\\Download\\FPT Udemy\\working-with-Form-Input\\src\\hooks\\useInput.js",[],"I:\\Download\\FPT Udemy\\working-with-Form-Input\\src\\components\\BasicForm.js",[],{"ruleId":"28","severity":1,"message":"29","line":1,"column":10,"nodeType":"30","messageId":"31","endLine":1,"endColumn":19},{"ruleId":"28","severity":1,"message":"32","line":1,"column":21,"nodeType":"30","messageId":"31","endLine":1,"endColumn":29},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-global-assign","no-unsafe-negation"]